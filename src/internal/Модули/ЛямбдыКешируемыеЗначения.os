Перем ЭтоЛямбдаВыражение;      // Кеш регулярного выражения лямбда выражения
Перем СодержитВозвратЗначения; // Кеш регулярного выражения содержит возврат значения

Перем КешСозданныхЛямбд; // LRU кеш созданных лямбд

Функция РегулярноеВыражениеЭтоЛямбдаВыражение() Экспорт
	
	Если ЭтоЛямбдаВыражение = Неопределено Тогда

		ЭтоЛямбдаВыражение = Новый РегулярноеВыражение(
			"(.*)->\s*([\s\S]*)"
		);

	КонецЕсли;

	Возврат ЭтоЛямбдаВыражение;

КонецФункции

Функция РегулярноеВыражениеСодержитВозвратЗначения() Экспорт
	
	Если СодержитВозвратЗначения = Неопределено Тогда
		СодержитВозвратЗначения = Новый РегулярноеВыражение("(?>[^\S]+|^)(Возврат)\s+[^;\s]+\s*;?");
	КонецЕсли;

	Возврат СодержитВозвратЗначения;

КонецФункции

Функция ДостатьИзКеша(Выражение, Интерфейс, Контекст, ЗахватываемыйОбъект) Экспорт

	Строки = КешСозданныхЛямбд.НайтиСтроки(
		Новый Структура(
			"Выражение, Интерфейс, Контекст, ЗахватываемыйОбъект",
			Выражение,
			Интерфейс,
			Контекст,
			ЗахватываемыйОбъект
		)
	);

	Если Строки.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;

	КешСозданныхЛямбд.Сдвинуть(Строки[0], -КешСозданныхЛямбд.Индекс(Строки[0]));
	Возврат Строки[0].Объект;

КонецФункции

Процедура ПоложитьВКеш(Выражение, Интерфейс, Контекст, ЗахватываемыйОбъект, Объект) Экспорт

	Строка = КешСозданныхЛямбд.Вставить(0);
	Строка.Выражение           = Выражение;
	Строка.Интерфейс           = Интерфейс;
	Строка.Контекст            = Контекст;
	Строка.ЗахватываемыйОбъект = ЗахватываемыйОбъект;
	Строка.Объект              = Объект;

	Если КешСозданныхЛямбд.Количество() > 20 Тогда
		КешСозданныхЛямбд.Удалить(КешСозданныхЛямбд.Количество() - 1);
	КонецЕсли;

КонецПроцедуры

КешСозданныхЛямбд = Новый ТаблицаЗначений();
КешСозданныхЛямбд.Колонки.Добавить("Выражение");
КешСозданныхЛямбд.Колонки.Добавить("Интерфейс");
КешСозданныхЛямбд.Колонки.Добавить("Контекст");
КешСозданныхЛямбд.Колонки.Добавить("ЗахватываемыйОбъект");
КешСозданныхЛямбд.Колонки.Добавить("Объект");
